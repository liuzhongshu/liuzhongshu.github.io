---
published: true
title: Android开发环境
layout: post
---
## Android Studio

从[这里](http://www.androiddevtools.cn/)下载Android Studio，下载最大最新的那个，含sdk和各种tools，省得后续下载的痛苦。

安装的时候，可以选择安装路径，如果不按缺省路径，安装完成后记得设置环境变量ANDROID_HOME到sdk的目录。因为很多命令行编译构建是依赖这个变量来找sdk。

sdk的目录下有个SDK Manager.exe，这个可以用来继续安装更多的sdk，默认的话，一般只带一个sdk，可以多安装几个sdk。

## 国情设置

在启动Android Studio之前，针对我们国情，建议做以下两个设置：

修改bin\idea.properties文件，增加或修改下面的属性，防止第一次运行是更新sdk被网络卡死。

```
disable.android.first.run=true
```

增加c:\users\xxx\.gradle\init.gradle文件，内容如下：

```
allprojects {
    repositories {
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public'}
    }
}
```

这个为gradle设置一个镜像，可以防止gradle从中央库下载文件（非常慢）。

## 运行studio

第一次运行，一定不要open之前的项目，因为项目需要的gradle版本不一致，一样可能会卡死，所以保险的方式是先创建一个HelloWorld，成功之后把其下gradle\wrapper\gradle-wrapper.proerties文件的最后一行拷贝出来，以后所有的项目都用这一行，类似下面这个：

```
distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-all.zip
```

## 模拟器

在Android Studio内管理模拟器，一定记得使能Intel Haxm，可以大大加速模拟器的速度，使能Intel Haxm会自动从intel下载一个驱动并自动安装，但是要在下次重启计算机之后，Haxm才会起到加速效果。


## Cordova/Ionic

如果使用Cordova或者Ionic创建工程，先安装node，安装之后设置一下npm，在用户目录下创建.npmrc，增加下面的一行，以加快npm的速度。

```
registry =https://registry.npm.taobao.org
```

再创建cordova/ionic工程就会快些了

```
ionic start demo --verbose
```


在cordova build android之后，就可以使用Android Studio来打开这个工程了，打开的时候选择项目下的platform\android这个目录即可。 

但是一样的问题，cordova build android可能会非常慢，所以另一方法是在platform add android之后，就用Android studio去打开工程，这时Android studio会自动建立一个gradle wrapper，然后就可以在Studio里编译调试了。